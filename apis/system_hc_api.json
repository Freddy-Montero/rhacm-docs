{
    "swagger": "2.0",
    "info": {
      "description": "API to determine cluster health status.",
      "title": "System Healthcheck Service",
      "license": {
        "name": "Licensed Materials - Property of IBM Copyright IBM Corporation 2019 All Rights Reserved U.S. Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP. The source code for this program is not published or otherwise divested of its trade secrets, irrespective of what has been deposited with the U.S. Copyright Office."
      },
      "version": "3.2.1"
    },
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "schemes": [
      "https"
    ],
    "basePath": "/cluster-health/v1alpha1",
    "paths": {
      "/health": {
        "get": {
          "summary": "Readiness probe",
          "description": "Provides the status of the cluster healthcheck service.",
          "produces": [
            "application/json"
          ],
          "tags": [
            "cluster_health"
          ],        
          "operationId": "GetSystemReadiness",
          "responses": {
            "200": {
              "description": "Healthcheck service is Ready."
            }
          }
        }
      },
      "/nodestatus": {
        "get": {
          "summary": "Returns a list with the node status.",
          "description": "Provides the list of nodes and their status, events, readiness etc.",
          "produces": [
            "application/json"
          ],
          "tags": [
            "cluster_health"
          ],        
          "operationId": "GetNodeStatus",
          "parameters": [
            {
              "type": "string",
              "description": "Format input as `Bearer <token>.`",
              "name": "Authorization",
              "in": "header",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Ok. Successfully fetched node status.",
              "schema": {
                "$ref": "#/definitions/nodeStatusResponse"
              }
            },
            "400": {
              "description": "Unauthorized. Authorization token is required."
            },
            "500": {
              "description": "Internal Server Error."
            }
          }
        }
      },
      "/clusterstatus": {
        "get": {
          "summary": "Returns an object with container and pod status.",
          "description": "Determines what services are enabled, their status, and their dependencies.",
          "produces": [
            "application/json"
          ],
          "tags": [
            "cluster_health"
          ],        
          "operationId": "GetSystemHealth",
          "parameters": [
            {
              "type": "string",
              "description": "Format input as `Bearer <token>.`",
              "name": "Authorization",
              "in": "header",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Ok. Successfully fetched system health.",
              "schema": {
                "$ref": "#/definitions/clusterHealthResponse"
              }
            },
            "400": {
              "description": "Unauthorized. Authorization token is required."            
            },
            "500": {
              "description": "Internal Server Error."
            }
          }
        }
      }
    },
    "definitions": {
      "clusterHealthResponse": {
        "type": "object",
        "properties": {
          "serviceStatus": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string"
              },
              "depends": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "nodeStatus": {
            "type": "object",
            "properties": {
              "IP address": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "lastHeartbeatTime": {
                      "type": "string"
                    },
                    "lastTransitionTime": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }  
              }
            }
          }
        }
      },
      "nodeStatusResponse": {
        "type": "object",
        "properties": {
          "IP address": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "lastHeartbeatTime": {
                  "type": "string"
                },
                "lastTransitionTime": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }  
          }
        }
      }
    }
  }
  
  
