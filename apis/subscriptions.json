{
  "swagger": "2.0",
  "info": {
    "description": "This documentation is for the Subscription resource for IBM Multicloud Manager.\nThe IBM Multicloud Manager Subscription resource has four possible requests: create, query, delete and update.",
    "version": "3.2.1",
    "title": "Subscription APIs",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/apis",
  "tags": [
    {
      "name": "Subscriptions.app.ibm.com",
      "description": "Create and manage subscriptions."
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/apps.open-cluster-management.io/v1/namespaces/{namespace}/subscriptions": {
      "post": {
        "tags": [
          "Subscriptions.app.ibm.com"
        ],
        "summary": "Create a subscription.",
        "description": "",
        "operationId": "createSubscriptions",
        "consumes": [
          "application/yaml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters that describe the subscription to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          {
            "in": "path",
            "name": "namespace",
            "description": "Namespace to be used. For example, \"default\".",
            "required": true,
            "type": "string"
          },
          {
            "name": "COOKIE",
            "in": "header",
            "description": "Authorization: Bearer {ACCESS_TOKEN} ; postspace, where ACCESS_TOKEN is the access token for the user.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "403": {
            "description": "Access forbidden."
          },
          "404": {
            "description": "Resource not found."
          },
          "500": {
            "description": "Internal service error."
          },
          "503": {
            "description": "Service unavailable."
          }
        }
      }
    },
    "/apps.open-cluster-management.io/v1/namespaces/{namespace}/subscriptions/{subscription_name}": {
      "get": {
        "tags": [
          "Subscriptions.app.ibm.com"
        ],
        "summary": "Query a subscription.",
        "description": "",
        "operationId": "querySubscription",
        "parameters": [
          {
            "name": "subscription_name",
            "in": "path",
            "description": "Name of the subscription to be queried.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "namespace",
            "description": "Namespace to be used. For example, \"default\".",
            "required": true,
            "type": "string"
          },
          {
            "name": "COOKIE",
            "in": "header",
            "description": "Authorization: Bearer {ACCESS_TOKEN} ; postspace, where ACCESS_TOKEN is the access token for the user.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "403": {
            "description": "Access forbidden."
          },
          "404": {
            "description": "Resource not found."
          },
          "500": {
            "description": "Internal service error."
          },
          "503": {
            "description": "Service unavailable."
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions.app.ibm.com"
        ],
        "summary": "Delete a subscription.",
        "description": "",
        "operationId": "deleteSubscription",
        "parameters": [
          {
            "name": "subscription_name",
            "in": "path",
            "description": "Name of the subscription to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "namespace",
            "description": "Namespace to be used. For example, \"default\".",
            "required": true,
            "type": "string"
          },
          {
            "name": "COOKIE",
            "in": "header",
            "description": "Authorization: Bearer {ACCESS_TOKEN} ; postspace, where ACCESS_TOKEN is the access token for the user.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "403": {
            "description": "Access forbidden."
          },
          "404": {
            "description": "Resource not found."
          },
          "500": {
            "description": "Internal service error."
          },
          "503": {
            "description": "Service unavailable."
          }
        }
      },
      "patch": {
        "tags": [
          "Subscriptions.app.ibm.com"
        ],
        "summary": "Update a subscription.",
        "description": "",
        "operationId": "updateSubscription",
        "consumes": [
          "application/yaml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscription_name",
            "description": "Name of the subscription to be updated.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update for the subscription.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          {
            "in": "path",
            "name": "namespace",
            "description": "Namespace to be used. For example, \"default\".",
            "required": true,
            "type": "string"
          },
          {
            "name": "COOKIE",
            "in": "header",
            "description": "Authorization: Bearer {ACCESS_TOKEN} ; postspace, where ACCESS_TOKEN is the access token for the user.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "403": {
            "description": "Access forbidden."
          },
          "404": {
            "description": "Resource not found."
          },
          "500": {
            "description": "Internal service error."
          },
          "503": {
            "description": "Service unavailable."
          }
        }
      }
    }
  },
  "definitions": {
    "ObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "generateName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "selfLink": {
          "type": "string"
        },
        "uid": {
          "type": "integer",
          "format": "uid"
        },
        "resourceVersion": {
          "type": "string"
        },
        "generation": {
          "type": "integer",
          "format": "int64"
        },
        "clusterName": {
          "type": "string"
        }
      }
    },
    "Subscription": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "spec": {
          "properties": {
            "overrides": {
              "description": "The cluster or clusters where the payload, in runtime RawExtension format, needs to override the template.",
              "items": {
                "properties": {
                  "clusterName": {
                    "type": "string"
                  },
                  "clusterOverrides": {
                    "items": {
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  }
                },
                "required": [
                  "clusterName",
                  "clusterOverrides"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "packageFilter": {
              "description": "Specify more than one package to include in the channel.",
              "properties": {
                "annotations": {
                  "type": "object"
                },
                "labelSelector": {
                  "type": "object"
                },
                "version": {
                  "pattern": "([0-9]+)((\\.[0-9]+)(\\.[0-9]+)|(\\.[0-9]+)?(\\.[xX]))$",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "packageOverrides": {
              "description": "To provide flexibility to override the template information for a package (deployable) within the channel with local inputs.",
              "items": {
                "properties": {
                  "packageName": {
                    "type": "string"
                  },
                  "packageAlias": {
                    "type": "string"
                  },
                  "packageOverrides": {
                    "items": {
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  }
                },
                "required": [
                  "packageName"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "placement": {
              "description": "The cluster or clusters where the package is to be deployed.",
              "properties": {
                "clusterSelector": {
                  "type": "object"
                },
                "clusters": {
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "placementRef": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "status": {
          "properties": {
            "message": {
              "type": "string"
            },
            "phase": {
              "description": "The phase is propagated when the phase is on the hub cluster. The phase is subscribed when the phase is in the managed cluster.",
              "type": "string"
            },
            "reason": {
              "type": "string"
            },
            "status": {
              "description": "For a managed cluster, the status is the status of the subscription. For the hub cluster, the status is the aggregation of all statuses. The key is the cluster name.",
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger.",
    "url": "http://swagger.io"
  }
}